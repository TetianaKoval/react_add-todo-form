{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","classNames","completed","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","selectedUser","chooseUser","newTodos","addTodo","isSubmited","changeSubmited","createId","lastTodos","allIdes","Math","max","action","method","onSubmit","event","preventDefault","length","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3e79482.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { title, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const findUser = usersFromServer.find(user => user.id === userId);\n\n  return findUser || null;\n}\n\nconst todos = todosFromServer.map((todo) => {\n  return (\n    {\n      ...todo,\n      user: getUser(todo.userId),\n    }\n  );\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, chooseUser] = useState('0');\n  const [newTodos, addTodo] = useState(todos);\n  const [isSubmited, changeSubmited] = useState(true);\n\n  const createId = (lastTodos: Todo[]) => {\n    const allIdes = lastTodos.map(todo => {\n      return (todo.id);\n    });\n\n    return Math.max(...allIdes) + 1;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (+selectedUser > 0 && title.length > 0) {\n            addTodo((prevTodos) => ([\n              ...prevTodos,\n              {\n                id: createId(prevTodos),\n                title,\n                completed: false,\n                userId: +selectedUser,\n                user: getUser(+selectedUser),\n              },\n            ]));\n            setTitle('');\n            chooseUser('0');\n            changeSubmited(true);\n          } else {\n            changeSubmited(false);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please enter a title\"\n            value={title}\n            onChange={(event) => {\n              return setTitle(event.target.value);\n            }}\n          />\n          {(!isSubmited && title.length === 0) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => {\n              return chooseUser(event.target.value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => {\n              return (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              );\n            })}\n          </select>\n          {(+selectedUser === 0 && !isSubmited) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}